{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;;AAAkD;AACH;AACkB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,0BAA0B;AACzF;AACA;AACA,kCAAkC,6BAA6B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0DAAU;AAClC,uBAAuB,uDAAS;AAChC,6BAA6B,yEAAe;AAC5C;AACA,SAAS;AACT,4BAA4B,kDAAkD;AAC9E;AACA;AACA;AACA,8DAA8D,+BAA+B;AAC7F;AACA;AACA;AACA;AACA,gDAAgD,mCAAmC;AACnF;AACA;AACA,CAAC;AACyB;;;;;;;;;;;;;;;;AC5DuB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,8BAA8B;AAC/E;AACA;AACA;AACA,QAAQ,6DAAU;AAClB;AACA;AACA;AACA,+CAA+C,4BAA4B;AAC3E,mDAAmD,gCAAgC;AACnF,gDAAgD,6BAA6B;AAC7E,iDAAiD,8BAA8B;AAC/E,gDAAgD,6BAA6B;AAC7E;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC0B;;;;;;;;;;;;;;;AC5D3B;AACA;AACA,yCAAyC;AACzqB;;;;;;;;;;;;;;;ACnHtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACoB;;;;;;;;;;;;;;;AC/Ed;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;UCrBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNmE;AACnE;AACA,IAAI,4EAAc","sources":["webpack://template-ts/./src/Controllers/mainWatchController.ts","webpack://template-ts/./src/Controllers/watchController.ts","webpack://template-ts/./src/Models/watchModel.ts","webpack://template-ts/./src/Views/watchView.ts","webpack://template-ts/./src/utils/enableDrag.ts","webpack://template-ts/webpack/bootstrap","webpack://template-ts/webpack/runtime/define property getters","webpack://template-ts/webpack/runtime/hasOwnProperty shorthand","webpack://template-ts/webpack/runtime/make namespace object","webpack://template-ts/./src/index.ts"],"sourcesContent":["import { WatchModel } from \"../Models/watchModel\";\nimport { WatchView } from \"../Views/watchView\";\nimport { WatchController } from \"../Controllers/watchController\";\nvar MainController = /** @class */ (function () {\n    function MainController() {\n        var _this = this;\n        this.watches = [];\n        this.addButton = document.createElement(\"button\");\n        this.addButton.className = \"btn add-btn\";\n        this.addButton.textContent = \"Add watch\";\n        this.addButton.addEventListener(\"click\", function () { return _this.addWatch(); });\n        document.body.appendChild(this.addButton);\n        // Synchroniser toutes les montres chaque seconde\n        setInterval(function () { return _this.syncWatches(); }, 1000);\n    }\n    MainController.prototype.addWatch = function () {\n        var _this = this;\n        var timezoneOffset;\n        var offset;\n        var isValidInput = false;\n        while (!isValidInput) {\n            timezoneOffset = prompt(\"Choisissez un fuseau horaire (ex: 2 pour GMT+2, -3 pour GMT-3) :\");\n            if (timezoneOffset === null) {\n                return;\n            }\n            if (timezoneOffset.trim() === \"\") {\n                offset = 0; // Convertir en heures\n                console.log(\"Décalage horaire du système (GMT):\", offset);\n                break; // Sortir de la boucle\n            }\n            if (isNaN(Number(timezoneOffset))) {\n                alert(\"Erreur : Vous devez entrer un nombre valide.\");\n                continue;\n            }\n            offset = parseInt(timezoneOffset, 10);\n            if (offset < -12 || offset > 12) {\n                alert(\"Erreur : Le fuseau horaire doit être compris entre -12 et +12.\");\n                continue;\n            }\n            isValidInput = true;\n        }\n        // Créer une nouvelle montre avec le décalage horaire valide\n        var model = new WatchModel(offset);\n        var view = new WatchView();\n        var controller = new WatchController(model, view, function () {\n            return _this.deleteWatch(model, view);\n        });\n        this.watches.push({ model: model, view: view, controller: controller });\n        document.body.appendChild(view.getContainer());\n    };\n    MainController.prototype.deleteWatch = function (model, view) {\n        this.watches = this.watches.filter(function (watch) { return watch.model !== model; });\n        view.getContainer().remove();\n    };\n    MainController.prototype.syncWatches = function () {\n        var now = new Date();\n        this.watches.forEach(function (watch) { return watch.model.syncTime(now); });\n    };\n    return MainController;\n}());\nexport { MainController };\n","import { EnableDrag } from \"../utils/enableDrag\";\nvar WatchController = /** @class */ (function () {\n    function WatchController(model, view, onDelete) {\n        var _this = this;\n        this.modeClicks = 0;\n        this.model = model;\n        this.view = view;\n        this.view.bindDeleteButton(function () { return _this.handleDelete(); });\n        this.onDelete = onDelete;\n        this.setupEventHandlers();\n        this.startUpdateLoop();\n        EnableDrag(view.getContainer());\n    }\n    WatchController.prototype.setupEventHandlers = function () {\n        var _this = this;\n        this.view.bindModeButton(function () { return _this.handleMode(); });\n        this.view.bindIncreaseButton(function () { return _this.handleIncrease(); });\n        this.view.bindLightButton(function () { return _this.handleLight(); });\n        this.view.bindFormatButton(function () { return _this.handleFormat(); });\n        this.view.bindResetButton(function () { return _this.handleReset(); });\n    };\n    WatchController.prototype.startUpdateLoop = function () {\n        var _this = this;\n        setInterval(function () {\n            _this.view.updateDisplay(_this.model.time, _this.model.mode, _this.model.light, _this.model.hourFormat);\n        }, 1000);\n    };\n    WatchController.prototype.handleMode = function () {\n        this.modeClicks = (this.modeClicks + 1) % 3;\n        switch (this.modeClicks) {\n            case 1:\n                this.model.setMode(\"hours\");\n                break;\n            case 2:\n                this.model.setMode(\"minutes\");\n                break;\n            default:\n                this.model.setMode(\"none\");\n        }\n    };\n    WatchController.prototype.handleIncrease = function () {\n        this.model.incrementTime();\n        if (this.model.mode !== \"none\") {\n            this.model.setEditedTime(this.model.time);\n        }\n    };\n    WatchController.prototype.handleLight = function () {\n        this.model.toggleLight();\n    };\n    WatchController.prototype.handleFormat = function () {\n        this.model.toggleHourFormat();\n    };\n    WatchController.prototype.handleReset = function () {\n        this.model.resetTime();\n    };\n    WatchController.prototype.handleDelete = function () {\n        this.onDelete();\n    };\n    return WatchController;\n}());\nexport { WatchController };\n","var WatchModel = /** @class */ (function () {\n    function WatchModel(timezoneOffset) {\n        if (timezoneOffset === void 0) { timezoneOffset = 0; }\n        this.editedTime = null;\n        this.editMode = \"none\";\n        this.isLightOn = false;\n        this.is12HourFormat = false;\n        this.timezoneOffset = timezoneOffset;\n        this.currentTime = this.getCurrentTime();\n        this.startClock();\n        this.loadSavedTime();\n    }\n    Object.defineProperty(WatchModel.prototype, \"time\", {\n        // Getters/Setters\n        get: function () {\n            return this.editedTime || this.currentTime;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WatchModel.prototype, \"mode\", {\n        get: function () {\n            return this.editMode;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WatchModel.prototype, \"light\", {\n        get: function () {\n            return this.isLightOn;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WatchModel.prototype, \"hourFormat\", {\n        get: function () {\n            return this.is12HourFormat;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WatchModel.prototype.startClock = function () {\n        var _this = this;\n        this.updateInterval = setInterval(function () {\n            if (_this.editedTime) {\n                _this.editedTime.setSeconds(_this.editedTime.getSeconds() + 1);\n            }\n            else {\n                _this.currentTime = _this.getCurrentTime();\n            }\n        }, 1000);\n    };\n    // Gérer l'heure réglée dans le localStorage\n    WatchModel.prototype.saveTime = function () {\n        if (this.editedTime) {\n            localStorage.setItem(\"savedTime\", JSON.stringify(this.editedTime));\n        }\n        else {\n            localStorage.removeItem(\"savedTime\");\n        }\n    };\n    WatchModel.prototype.loadSavedTime = function () {\n        var savedTime = localStorage.getItem(\"savedTime\");\n        if (savedTime) {\n            this.editedTime = new Date(JSON.parse(savedTime));\n        }\n    };\n    WatchModel.prototype.getCurrentTime = function () {\n        var now = new Date();\n        var offset = this.timezoneOffset * 3600 * 1000;\n        return new Date(now.getTime() + offset);\n    };\n    WatchModel.prototype.syncTime = function (baseTime) {\n        var offset = this.timezoneOffset * 3600 * 1000;\n        this.currentTime = new Date(baseTime.getTime() + offset);\n    };\n    WatchModel.prototype.setMode = function (newMode) {\n        this.editMode = newMode;\n        if (newMode === \"none\") {\n            if (!this.editedTime) {\n                this.editedTime = new Date(this.currentTime);\n            }\n        }\n    };\n    WatchModel.prototype.incrementTime = function () {\n        var timeToUpdate = this.editedTime || this.currentTime;\n        var newTime = new Date(timeToUpdate);\n        if (this.editMode === \"hours\") {\n            newTime.setHours((newTime.getHours() + 1) % 24);\n        }\n        else if (this.editMode === \"minutes\") {\n            newTime.setMinutes((newTime.getMinutes() + 1) % 60);\n            if (newTime.getMinutes() === 0) {\n                newTime.setHours((newTime.getHours() + 1) % 24);\n            }\n        }\n        this.editedTime = newTime;\n    };\n    WatchModel.prototype.toggleLight = function () {\n        this.isLightOn = !this.isLightOn;\n    };\n    WatchModel.prototype.toggleHourFormat = function () {\n        this.is12HourFormat = !this.is12HourFormat;\n    };\n    WatchModel.prototype.resetTime = function () {\n        this.currentTime = new Date();\n        this.editedTime = null;\n        this.saveTime();\n    };\n    WatchModel.prototype.setEditedTime = function (newTime) {\n        this.editedTime = newTime;\n        this.saveTime();\n    };\n    return WatchModel;\n}());\nexport { WatchModel };\n","var WatchView = /** @class */ (function () {\n    function WatchView() {\n        document.getElementById(\"watch-root\");\n        this.createUI();\n    }\n    WatchView.prototype.createUI = function () {\n        this.container = document.createElement(\"div\");\n        this.container.className = \"watch-container\";\n        this.display = document.createElement(\"div\");\n        this.display.className = \"display\";\n        this.modeBtn = document.createElement(\"button\");\n        this.modeBtn.className = \"btn mode-btn\";\n        this.modeBtn.textContent = \"MOD\";\n        this.increaseBtn = document.createElement(\"button\");\n        this.increaseBtn.className = \"btn increase-btn\";\n        this.increaseBtn.textContent = \"ADJ\";\n        this.lightBtn = document.createElement(\"button\");\n        this.lightBtn.className = \"btn light-btn\";\n        this.lightBtn.textContent = \"LT\";\n        this.formatBtn = document.createElement(\"button\");\n        this.formatBtn.className = \"btn format-btn\";\n        this.formatBtn.textContent = \"AP\";\n        this.resetBtn = document.createElement(\"button\");\n        this.resetBtn.className = \"btn reset-btn\";\n        this.resetBtn.textContent = \"RST\";\n        this.deleteBtn = document.createElement(\"button\");\n        this.deleteBtn.className = \"btn delete-btn\";\n        this.deleteBtn.textContent = \"\";\n        this.container.append(this.display, this.modeBtn, this.increaseBtn, this.lightBtn, this.formatBtn, this.resetBtn, this.deleteBtn);\n        document.body.appendChild(this.container);\n    };\n    WatchView.prototype.getContainer = function () {\n        return this.container;\n    };\n    WatchView.prototype.updateDisplay = function (time, editMode, isLightOn, is12HourFormat) {\n        var hours = time.getHours();\n        var minutes = this.formatNumber(time.getMinutes());\n        var seconds = this.formatNumber(time.getSeconds());\n        // Convertir en format 12h si nécessaire\n        if (is12HourFormat) {\n            var period = hours >= 12 ? \"PM\" : \"AM\";\n            // Convertir en format 12h\n            if (hours === 0) {\n                hours = 12; // Minuit (0 heures) devient 12 en format 12h\n            }\n            else if (hours > 12) {\n                hours = hours % 12; // Heures après midi (13-23) deviennent 1-11\n            }\n            this.display.innerHTML = \"\\n            <span class=\\\"\".concat(editMode === \"hours\" ? \"blink\" : \"\", \"\\\">\").concat(this.formatNumber(hours), \"</span>:\\n            <span class=\\\"\").concat(editMode === \"minutes\" ? \"blink\" : \"\", \"\\\">\").concat(minutes, \"</span>:\\n            <span class=\\\"seconds\\\">\").concat(seconds, \"</span>\\n            <span class=\\\"period\\\">\").concat(period, \"</span> <!-- Afficher AM ou PM dynamiquement -->\\n        \");\n        }\n        else {\n            this.display.innerHTML = \"\\n            <span class=\\\"\".concat(editMode === \"hours\" ? \"blink\" : \"\", \"\\\">\").concat(this.formatNumber(hours), \"</span>:\\n            <span class=\\\"\").concat(editMode === \"minutes\" ? \"blink\" : \"\", \"\\\">\").concat(minutes, \"</span>:\\n            <span>\").concat(seconds, \"</span>\\n        \");\n        }\n        this.display.style.backgroundColor = isLightOn ? \"#FBE106\" : \"#FFFFFF\";\n    };\n    WatchView.prototype.formatNumber = function (num) {\n        return num.toString().padStart(2, \"0\");\n    };\n    //évenements :\n    WatchView.prototype.bindFormatButton = function (handler) {\n        this.formatBtn.addEventListener(\"click\", handler);\n    };\n    WatchView.prototype.bindModeButton = function (handler) {\n        this.modeBtn.addEventListener(\"click\", handler);\n    };\n    WatchView.prototype.bindIncreaseButton = function (handler) {\n        this.increaseBtn.addEventListener(\"click\", handler);\n    };\n    WatchView.prototype.bindLightButton = function (handler) {\n        this.lightBtn.addEventListener(\"click\", handler);\n    };\n    WatchView.prototype.bindResetButton = function (handler) {\n        this.resetBtn.addEventListener(\"click\", handler);\n    };\n    WatchView.prototype.bindDeleteButton = function (handler) {\n        this.deleteBtn.addEventListener(\"click\", handler);\n    };\n    return WatchView;\n}());\nexport { WatchView };\n","export function EnableDrag(element) {\n    var isDragging = false;\n    var offsetX, offsetY;\n    element.addEventListener(\"mousedown\", function (e) {\n        isDragging = true;\n        offsetX = e.clientX - element.getBoundingClientRect().left;\n        offsetY = e.clientY - element.getBoundingClientRect().top;\n        element.style.cursor = \"grabbing\";\n    });\n    document.addEventListener(\"mousemove\", function (e) {\n        if (isDragging) {\n            element.style.left = \"\".concat(e.clientX - offsetX, \"px\");\n            element.style.top = \"\".concat(e.clientY - offsetY, \"px\");\n        }\n    });\n    document.addEventListener(\"mouseup\", function () {\n        if (isDragging) {\n            isDragging = false;\n            element.style.cursor = \"grab\";\n        }\n    });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { MainController } from \"./Controllers/mainWatchController\";\n// Initialiser l'application\nnew MainController();\n"],"names":[],"sourceRoot":""}